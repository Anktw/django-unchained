"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
TEST=os.environ.get('TEST', False)
root= environ.Path(__file__) - 1
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

env = environ.Env()
if not TEST:
    environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# SECURITY WARNING: keep the secret key used in production secret!
APP_NAME = env.str('APP_NAME', default='django-unchained')
APP_DOMAIN = env.str('APP_DOMAIN', default='http://localhost:8000')
SECRET_KEY = env.str('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=False)

ALLOWED_HOSTS = env.tuple('ALLOWED_HOSTS', default=('localhost', '0.0.0.0'))

CORS_ORIGIN_ALLOW_ALL = env.bool('CORS_ORIGIN_ALLOW_ALL', default=False)
CORS_ORIGIN_WHITELIST = env.tuple('CORS_ORIGIN_WHITELIST', default=('https://localhost:8000', 'https://0.0.0.0:8000',))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email
EMAIL_VERIFICATION_CODE_LENGTH = env.int('EMAIL_VERIFICATION_CODE_LENGTH')
EMAIL_VERIFICATION_CODE_LIFETIME_MINS = env.int('EMAIL_VERIFICATION_CODE_LIFETIME_MINS')

EMAIL_BACKEND = env.str('EMAIL_BACKEND')
EMAIL_HOST = env.str('EMAIL_HOST')
EMAIL_HOST_USER = env.str('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env.str('EMAIL_HOST_PASSWORD')
EMAIL_PORT = env.str('EMAIL_PORT')
EMAIL_USE_TLS = env.str('EMAIL_USE_TLS')

# Settings for media
MEDIA_ROOT = os.path.join(BASE_DIR, env.str('MEDIA_ROOT'))
MEDIA_URL = env.str('MEDIA_URL')

# APIs
TENANT_DOMAIN_LENGTH = env.int('TENANT_DOMAIN_LENGTH')
TENANT_INVITATION_CODE_LENGTH = env.int('TENANT_INVITATION_CODE_LENGTH')
TENANT_INVITATION_CODE_LIFETIME_MINS = (
    env.int('TENANT_INVITATION_CODE_LIFETIME_MINS'))
TENANT_INVITATION_CODE_REQUEST_MAX_SIZE = (
    env.int('TENANT_INVITATION_CODE_REQUEST_MAX_SIZE'))

FAILED_LOGIN_ATTEMPT_MAX_COUNT = env.int('FAILED_LOGIN_ATTEMPT_MAX_COUNT')
LOGIN_LOCK_PERIOD_MINS = env.int('LOGIN_LOCK_PERIOD_MINS')
PASSWORD_RESET_CODE_LENGTH = env.int('PASSWORD_RESET_CODE_LENGTH')
PASSWORD_RESET_CODE_LIFETIME_MINS = env.int('PASSWORD_RESET_CODE_LIFETIME_MINS')
